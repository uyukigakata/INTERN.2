{"filter":false,"title":"codegen.py","tooltip":"/mydiycc/codegen.py","undoManager":{"mark":0,"position":0,"stack":[[{"start":{"row":0,"column":0},"end":{"row":73,"column":0},"action":"insert","lines":["def walk( tree , f):","    if (tree[0] == 'NUM'):","        f.write('   pushq $'+tree[1]+ \"\\n\")","    elif (tree[0] == '+'):","        walk(tree[1],f)","        walk(tree[2],f)","        f.write(r'   pop %rdi' + \"\\n\")","        f.write(r'   pop %rax' + \"\\n\")","        f.write(r'   add %rdi,%rax' + \"\\n\")","        f.write(r'   pushq %rax' + \"\\n\")","    elif (tree[0] == '-'):","        walk(tree[1],f)","        walk(tree[2],f)","        f.write(r'   pop %rdi' + \"\\n\")","        f.write(r'   pop %rax' + \"\\n\")","        f.write(r'   sub %rdi,%rax' + \"\\n\")","        f.write(r'   pushq %rax' + \"\\n\")","    elif (tree[0] == '*'):","        walk(tree[1],f)","        walk(tree[2],f)","        f.write(r'   pop %rdi' + \"\\n\")","        f.write(r'   pop %rax' + \"\\n\")","        f.write(r'   imul %rdi,%rax' + \"\\n\")","        f.write(r'   pushq %rax' + \"\\n\")","    # elif (tree[0] == '/'):","    #     walk(tree[1],f)","    #     walk(tree[2],f)","    #     f.write(r'   pop %rdi' + \"\\n\")","    #     f.write(r'   pop %rax' + \"\\n\")","    #     f.write(r'   sub %rdi,%rax' + \"\\n\")","    #     f.write(r'   pushq %rax' + \"\\n\")","","def codegen( tree , filename ):","    with open(filename, mode='w') as f:","","        ## １個目は関数の定義とする","        teigi1 = tree[0]","","        ##","        print('===codegen step1===')","        print(teigi1)","        rettype  = teigi1[1]    #戻り値の型 int","        funcname = teigi1[2]    #関数名 main","","        exp = []","        returnexp = list( filter( lambda item: item[0] != 'SENGEN' , teigi1[3] ) )","        exp = returnexp[0][1]","        # exp      = teigi1[3][2][1] #文","        print(exp)","","        print('===codegen step2===')","        print('funcname: '+funcname)","","        #asm の先頭","        f.write(r'  .text' + \"\\n\")","","        #関数ヘッダ","        f.write(r'  .globl\t'+ funcname + \"\\n\")","        f.write(r'  .type\t'+ funcname + ', @function' + \"\\n\")","        f.write(funcname + \":\\n\")","        f.write(r'  endbr64' + \"\\n\")","        f.write(r'  pushq %rbp' + \"\\n\")","        f.write(r'  movq %rsp, %rbp' + \"\\n\")","","        #式を歩く","        walk(exp,f)","        f.write(r'   pop\t%rax'+ \"\\n\")","","        #関数フッダ","        f.write(r'   popq\t%rbp'+ \"\\n\")","        f.write(r'   ret'+ \"\\n\")","        f.write(r'   .size '+funcname+', .-'+ funcname +\"\\n\")","",""],"id":1}]]},"ace":{"folds":[],"scrolltop":789,"scrollleft":0,"selection":{"start":{"row":57,"column":26},"end":{"row":57,"column":26},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":33,"state":"start","mode":"ace/mode/python"}},"timestamp":1693908405302,"hash":"43e3e48278d03b09e7b924293cee75ac13fc0ade"}