{"filter":false,"title":"lex.py","tooltip":"/mydiycc/my006/lex.py","undoManager":{"mark":14,"position":14,"stack":[[{"start":{"row":0,"column":0},"end":{"row":59,"column":0},"action":"insert","lines":["import ply.lex as lex","","##トークンの定義","tokens = (","    'NUMBER',","","    'OPTASU',","    'OPHIKU',","","    'OPKAKE',","","    'SEMI',","    'RETURN'",")","","## トークンのパターン","## tokens にある 'NUMBER' の prefix に t_ を付けたものを定義する","## r'\\d+' は r'' はraw文字列を意味する。 \\d+ は 正規表現で \\d(数字) の +(1個以上の繰り返し)","t_NUMBER = r'\\d+'","","t_OPTASU = r'\\+'","t_OPHIKU = r'\\-'","","t_OPKAKE = r'\\*'","#t_OPWARU = r'\\/'","","t_SEMI   = ';'","t_RETURN = 'return'","","## space と \\t は igonore(無視)","t_ignore = ' \\t'","","## お約束的","## エラー発生時に呼ばれる","def t_error(t):","    print(\"Error '%s'\" % t.value[0])","    t.lexer.skip(1)","","## お約束的","## 改行の時","def t_newline(t):","    r'\\n+'","    t.lexer.lineno += len(t.value)","","lexer = lex.lex(debug=0)","","if __name__ == '__main__':  ","    # ここからテスト","    data = '''","    return 49+5;","    '''","    lexer.input(data)    ","    while True:","        tok = lexer.token()","        if not tok:  ","            # これ以上トークンはない","            break","        # トークンを出力","        print(tok)",""],"id":1}],[{"start":{"row":0,"column":0},"end":{"row":59,"column":0},"action":"remove","lines":["import ply.lex as lex","","##トークンの定義","tokens = (","    'NUMBER',","","    'OPTASU',","    'OPHIKU',","","    'OPKAKE',","","    'SEMI',","    'RETURN'",")","","## トークンのパターン","## tokens にある 'NUMBER' の prefix に t_ を付けたものを定義する","## r'\\d+' は r'' はraw文字列を意味する。 \\d+ は 正規表現で \\d(数字) の +(1個以上の繰り返し)","t_NUMBER = r'\\d+'","","t_OPTASU = r'\\+'","t_OPHIKU = r'\\-'","","t_OPKAKE = r'\\*'","#t_OPWARU = r'\\/'","","t_SEMI   = ';'","t_RETURN = 'return'","","## space と \\t は igonore(無視)","t_ignore = ' \\t'","","## お約束的","## エラー発生時に呼ばれる","def t_error(t):","    print(\"Error '%s'\" % t.value[0])","    t.lexer.skip(1)","","## お約束的","## 改行の時","def t_newline(t):","    r'\\n+'","    t.lexer.lineno += len(t.value)","","lexer = lex.lex(debug=0)","","if __name__ == '__main__':  ","    # ここからテスト","    data = '''","    return 49+5;","    '''","    lexer.input(data)    ","    while True:","        tok = lexer.token()","        if not tok:  ","            # これ以上トークンはない","            break","        # トークンを出力","        print(tok)",""],"id":2},{"start":{"row":0,"column":0},"end":{"row":46,"column":18},"action":"insert","lines":["import ply.lex as lex","","tokens = ( ","    'NUMBER',","    'RETURN',","    'SEMI',","    'OPTASU',","    'OPHIKU'",")","","t_NUMBER = r'\\d+'","","t_RETURN = 'return'","","t_SEMI = ';'","","t_OPTASU = r'\\+'","","t_OPHIKU = r'\\-'","","","#タブ区切りと空白を無視","t_ignore = ' \\t'","","","#エラー時に表示","def t_error(t):","    print(\"Error '%s'\" % t.value[0])","    t.lexer.skip(1)","","#改行時の約束","def t_newline(t):","    r'\\n+'","    t.lexer.lineno += len(t.value)","    ","lexer = lex.lex(debug=0)","","if __name__ == '__main__':","    data = '''","    return 3-1-1;","    '''","    lexer.input(data)","    while True:","        tok = lexer.token()","        if not tok:","            break","        print(tok)"]}],[{"start":{"row":7,"column":12},"end":{"row":7,"column":13},"action":"insert","lines":[","],"id":3}],[{"start":{"row":7,"column":13},"end":{"row":8,"column":0},"action":"insert","lines":["",""],"id":4},{"start":{"row":8,"column":0},"end":{"row":8,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":8,"column":4},"end":{"row":8,"column":6},"action":"insert","lines":["''"],"id":5}],[{"start":{"row":8,"column":5},"end":{"row":8,"column":6},"action":"insert","lines":["O"],"id":6},{"start":{"row":8,"column":6},"end":{"row":8,"column":7},"action":"insert","lines":["P"]},{"start":{"row":8,"column":7},"end":{"row":8,"column":8},"action":"insert","lines":["K"]},{"start":{"row":8,"column":8},"end":{"row":8,"column":9},"action":"insert","lines":["A"]},{"start":{"row":8,"column":9},"end":{"row":8,"column":10},"action":"insert","lines":["K"]}],[{"start":{"row":8,"column":10},"end":{"row":8,"column":11},"action":"insert","lines":["E"],"id":7}],[{"start":{"row":19,"column":16},"end":{"row":20,"column":0},"action":"insert","lines":["",""],"id":8},{"start":{"row":20,"column":0},"end":{"row":21,"column":0},"action":"insert","lines":["",""]},{"start":{"row":21,"column":0},"end":{"row":21,"column":1},"action":"insert","lines":["t"]},{"start":{"row":21,"column":1},"end":{"row":21,"column":2},"action":"insert","lines":["_"]}],[{"start":{"row":21,"column":2},"end":{"row":21,"column":3},"action":"insert","lines":["P"],"id":9}],[{"start":{"row":21,"column":2},"end":{"row":21,"column":3},"action":"remove","lines":["P"],"id":10}],[{"start":{"row":21,"column":2},"end":{"row":21,"column":3},"action":"insert","lines":["O"],"id":11},{"start":{"row":21,"column":3},"end":{"row":21,"column":4},"action":"insert","lines":["P"]},{"start":{"row":21,"column":4},"end":{"row":21,"column":5},"action":"insert","lines":["K"]},{"start":{"row":21,"column":5},"end":{"row":21,"column":6},"action":"insert","lines":["A"]},{"start":{"row":21,"column":6},"end":{"row":21,"column":7},"action":"insert","lines":["K"]},{"start":{"row":21,"column":7},"end":{"row":21,"column":8},"action":"insert","lines":["E"]}],[{"start":{"row":21,"column":8},"end":{"row":21,"column":9},"action":"insert","lines":[" "],"id":12},{"start":{"row":21,"column":9},"end":{"row":21,"column":10},"action":"insert","lines":["="]}],[{"start":{"row":21,"column":10},"end":{"row":21,"column":11},"action":"insert","lines":[" "],"id":13},{"start":{"row":21,"column":11},"end":{"row":21,"column":12},"action":"insert","lines":["r"]}],[{"start":{"row":21,"column":12},"end":{"row":21,"column":14},"action":"insert","lines":["''"],"id":14}],[{"start":{"row":21,"column":13},"end":{"row":21,"column":14},"action":"insert","lines":["\\"],"id":15},{"start":{"row":21,"column":14},"end":{"row":21,"column":15},"action":"insert","lines":["*"]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":0,"column":0},"end":{"row":49,"column":18},"isBackwards":true},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":35,"state":"start","mode":"ace/mode/python"}},"timestamp":1693543688716,"hash":"dbcc4232d0336940dbd595dae3c87e0e0188baf5"}