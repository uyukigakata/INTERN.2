{"filter":false,"title":"lex.py","tooltip":"/mydiycc/my013/lex.py","undoManager":{"mark":44,"position":44,"stack":[[{"start":{"row":0,"column":0},"end":{"row":88,"column":0},"action":"insert","lines":["import inspect","import ply.yacc as yacc","from lex import tokens","from codegen import codegen ","from collections import namedtuple","Node = namedtuple('Node',('label','items'))","","#+- < *\\","precedence = (","            ('left','OPTASU','OPHIKU'),","            ('left','OPKAKE'),",")","","#定義","def p_top(p):","    '''","    teigi : kansuuteigi","    '''","    ","    p[0] = [p[1]]","","def p_kansuuteigi(p):","    '''","    kansuuteigi : TYPE SYMBOL KAKKO KOKKA LBRACE bunlist RBRACE","    '''","    #p[0] = ['func',p[1],p[2],p[6]]","    p[0] = Node(label='func',items=[p[1],p[2],p[6]])","","def p_bunlist(p):","    '''","    bunlist : bun","            | bunlist bun","    '''","    if (len(p) == 2):","        p[0] = [p[1]]","    else:","        tmp = p[1]","        tmp.append(p[2])","        p[0] = tmp","","def p_bun_return(p):","    '''","    bun : RETURN expression SEMI","    '''","    #p[0] = [p[1],p[2]]","    p[0] = Node(label='return',items=[p[2]])","","def p_bun_sengen(p):","    '''","    bun : TYPE SYMBOL SEMI","    '''","    #p[0] = ['SENGEN',p[1],p[2]]","    p[0] = Node(label='SENGEN',items=[p[1],p[2]])","","def p_expression(p):","    '''","    expression : NUMBER","               | expression OPTASU expression","               | expression OPHIKU expression","               | expression OPKAKE expression","    '''","    ","    if(len(p) == 2):","        #p[0] = ['NUM', p[1]]","        p[0] = Node(label='NUM',items=[p[1]])","    else:","        #p[0] = [p[2],p[1],p[3]]","        p[0] = Node(label=p[2],items=[p[1],p[3]])","","# syntax error","def p_error(p):","    print ('Syntax error %s' % p)","","parser = yacc.yacc()","","#テスト実行","if __name__== '__main__':","    s = '''","    int main(){","        int x;","        int y;","        return 3+2*3;","    }","    '''","    result = parser.parse(s)","    print(\"==AST==\")","    print(result)","    codegen(result, 'out.s')",""],"id":1}],[{"start":{"row":0,"column":0},"end":{"row":88,"column":0},"action":"remove","lines":["import inspect","import ply.yacc as yacc","from lex import tokens","from codegen import codegen ","from collections import namedtuple","Node = namedtuple('Node',('label','items'))","","#+- < *\\","precedence = (","            ('left','OPTASU','OPHIKU'),","            ('left','OPKAKE'),",")","","#定義","def p_top(p):","    '''","    teigi : kansuuteigi","    '''","    ","    p[0] = [p[1]]","","def p_kansuuteigi(p):","    '''","    kansuuteigi : TYPE SYMBOL KAKKO KOKKA LBRACE bunlist RBRACE","    '''","    #p[0] = ['func',p[1],p[2],p[6]]","    p[0] = Node(label='func',items=[p[1],p[2],p[6]])","","def p_bunlist(p):","    '''","    bunlist : bun","            | bunlist bun","    '''","    if (len(p) == 2):","        p[0] = [p[1]]","    else:","        tmp = p[1]","        tmp.append(p[2])","        p[0] = tmp","","def p_bun_return(p):","    '''","    bun : RETURN expression SEMI","    '''","    #p[0] = [p[1],p[2]]","    p[0] = Node(label='return',items=[p[2]])","","def p_bun_sengen(p):","    '''","    bun : TYPE SYMBOL SEMI","    '''","    #p[0] = ['SENGEN',p[1],p[2]]","    p[0] = Node(label='SENGEN',items=[p[1],p[2]])","","def p_expression(p):","    '''","    expression : NUMBER","               | expression OPTASU expression","               | expression OPHIKU expression","               | expression OPKAKE expression","    '''","    ","    if(len(p) == 2):","        #p[0] = ['NUM', p[1]]","        p[0] = Node(label='NUM',items=[p[1]])","    else:","        #p[0] = [p[2],p[1],p[3]]","        p[0] = Node(label=p[2],items=[p[1],p[3]])","","# syntax error","def p_error(p):","    print ('Syntax error %s' % p)","","parser = yacc.yacc()","","#テスト実行","if __name__== '__main__':","    s = '''","    int main(){","        int x;","        int y;","        return 3+2*3;","    }","    '''","    result = parser.parse(s)","    print(\"==AST==\")","    print(result)","    codegen(result, 'out.s')",""],"id":2}],[{"start":{"row":0,"column":0},"end":{"row":80,"column":18},"action":"insert","lines":["import ply.lex as lex","","tokens = ( ","    'NUMBER',   #数値","    'RETURN',   #return","    'SEMI',     #セミコロン","    'OPTASU',   #+","    'OPHIKU',   #-","    'OPKAKE',   #*","    #'OPWARU',   #\\","    'SYMBOL',   #文字","    'LBRACE',   #{","    'RBRACE',   #}","    'KAKKO',    #(","    'KOKKA',    #)","    ","    'TYPE'      #型","    ",")","","t_NUMBER = r'\\d+'","","#t_RETURN = 'return'","","t_SEMI = ';'","","t_OPTASU = r'\\+'","","t_OPHIKU = r'\\-'","","t_OPKAKE = r'\\*'","","#t_OPWARU = r'\\/'","","t_LBRACE = r'\\{'","","t_RBRACE = r'\\}'","","t_KAKKO = r'\\('","","t_KOKKA = r'\\)'","","def t_SYMBOL(t):","    r'[a-zA-Z_][0-9a-zA-Z_]*'","    if t.value == 'return':","        t.type = 'RETURN'","    if t.value == 'int':","        t.type = 'TYPE'","    return t","","","#タブ区切りと空白を無視","t_ignore = ' \\t'","","","#エラー時に表示","def t_error(t):","    print(\"Error '%s'\" % t.value[0])","    t.lexer.skip(1)","","#改行時の約束","def t_newline(t):","    r'\\n+'","    t.lexer.lineno += len(t.value)","    ","lexer = lex.lex(debug=0)","","if __name__ == '__main__':","    data = '''","    int main(){","        int x;","        int y;","        return 3+2*3;","    }","    '''","    lexer.input(data)","    while True:","        tok = lexer.token()","        if not tok:","            break","        print(tok)"],"id":3}],[{"start":{"row":14,"column":18},"end":{"row":15,"column":0},"action":"insert","lines":["",""],"id":4},{"start":{"row":15,"column":0},"end":{"row":15,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":15,"column":4},"end":{"row":15,"column":6},"action":"insert","lines":["''"],"id":5}],[{"start":{"row":15,"column":5},"end":{"row":15,"column":6},"action":"insert","lines":["E"],"id":6},{"start":{"row":15,"column":6},"end":{"row":15,"column":7},"action":"insert","lines":["Q"]}],[{"start":{"row":15,"column":7},"end":{"row":15,"column":8},"action":"insert","lines":["U"],"id":7},{"start":{"row":15,"column":8},"end":{"row":15,"column":9},"action":"insert","lines":["A"]},{"start":{"row":15,"column":9},"end":{"row":15,"column":10},"action":"insert","lines":["L"]},{"start":{"row":15,"column":10},"end":{"row":15,"column":11},"action":"insert","lines":["S"]}],[{"start":{"row":15,"column":12},"end":{"row":15,"column":13},"action":"insert","lines":[","],"id":8}],[{"start":{"row":15,"column":13},"end":{"row":15,"column":14},"action":"insert","lines":[" "],"id":9}],[{"start":{"row":15,"column":13},"end":{"row":15,"column":14},"action":"remove","lines":[" "],"id":10}],[{"start":{"row":15,"column":13},"end":{"row":15,"column":16},"action":"insert","lines":["   "],"id":11}],[{"start":{"row":15,"column":16},"end":{"row":15,"column":17},"action":"insert","lines":["#"],"id":12}],[{"start":{"row":15,"column":17},"end":{"row":15,"column":18},"action":"insert","lines":["="],"id":13}],[{"start":{"row":15,"column":17},"end":{"row":15,"column":18},"action":"remove","lines":["="],"id":14}],[{"start":{"row":15,"column":17},"end":{"row":15,"column":19},"action":"insert","lines":["代入"],"id":15}],[{"start":{"row":15,"column":19},"end":{"row":15,"column":20},"action":"insert","lines":["="],"id":16}],[{"start":{"row":41,"column":15},"end":{"row":42,"column":0},"action":"insert","lines":["",""],"id":17},{"start":{"row":42,"column":0},"end":{"row":43,"column":0},"action":"insert","lines":["",""]},{"start":{"row":43,"column":0},"end":{"row":43,"column":1},"action":"insert","lines":["t"]}],[{"start":{"row":43,"column":1},"end":{"row":43,"column":2},"action":"insert","lines":["_"],"id":18}],[{"start":{"row":43,"column":2},"end":{"row":43,"column":3},"action":"insert","lines":["E"],"id":19},{"start":{"row":43,"column":3},"end":{"row":43,"column":4},"action":"insert","lines":["Q"]}],[{"start":{"row":43,"column":4},"end":{"row":43,"column":5},"action":"insert","lines":["U"],"id":20},{"start":{"row":43,"column":5},"end":{"row":43,"column":6},"action":"insert","lines":["A"]},{"start":{"row":43,"column":6},"end":{"row":43,"column":7},"action":"insert","lines":["L"]},{"start":{"row":43,"column":7},"end":{"row":43,"column":8},"action":"insert","lines":["S"]}],[{"start":{"row":43,"column":8},"end":{"row":43,"column":9},"action":"insert","lines":[" "],"id":21},{"start":{"row":43,"column":9},"end":{"row":43,"column":10},"action":"insert","lines":["="]}],[{"start":{"row":43,"column":10},"end":{"row":43,"column":11},"action":"insert","lines":[" "],"id":22},{"start":{"row":43,"column":11},"end":{"row":43,"column":12},"action":"insert","lines":["r"]}],[{"start":{"row":43,"column":12},"end":{"row":43,"column":14},"action":"insert","lines":["''"],"id":23}],[{"start":{"row":43,"column":13},"end":{"row":43,"column":14},"action":"insert","lines":["^"],"id":24}],[{"start":{"row":43,"column":13},"end":{"row":43,"column":14},"action":"remove","lines":["^"],"id":25}],[{"start":{"row":43,"column":13},"end":{"row":43,"column":14},"action":"insert","lines":["\\"],"id":26}],[{"start":{"row":43,"column":13},"end":{"row":43,"column":14},"action":"remove","lines":["\\"],"id":27}],[{"start":{"row":43,"column":13},"end":{"row":43,"column":14},"action":"insert","lines":["="],"id":28}],[{"start":{"row":17,"column":10},"end":{"row":17,"column":11},"action":"insert","lines":[","],"id":29}],[{"start":{"row":9,"column":16},"end":{"row":9,"column":17},"action":"remove","lines":[" "],"id":30}],[{"start":{"row":27,"column":14},"end":{"row":27,"column":15},"action":"insert","lines":["d"],"id":31}],[{"start":{"row":27,"column":14},"end":{"row":27,"column":15},"action":"remove","lines":["d"],"id":32}],[{"start":{"row":74,"column":14},"end":{"row":75,"column":0},"action":"insert","lines":["",""],"id":33},{"start":{"row":75,"column":0},"end":{"row":75,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":75,"column":8},"end":{"row":75,"column":9},"action":"insert","lines":["x"],"id":34},{"start":{"row":75,"column":9},"end":{"row":75,"column":10},"action":"insert","lines":["="]}],[{"start":{"row":75,"column":10},"end":{"row":75,"column":11},"action":"insert","lines":["1"],"id":35},{"start":{"row":75,"column":11},"end":{"row":75,"column":12},"action":"insert","lines":["0"]}],[{"start":{"row":75,"column":12},"end":{"row":75,"column":13},"action":"insert","lines":[";"],"id":36}],[{"start":{"row":75,"column":13},"end":{"row":76,"column":0},"action":"insert","lines":["",""],"id":37},{"start":{"row":76,"column":0},"end":{"row":76,"column":8},"action":"insert","lines":["        "]},{"start":{"row":76,"column":8},"end":{"row":76,"column":9},"action":"insert","lines":["y"]}],[{"start":{"row":76,"column":9},"end":{"row":77,"column":0},"action":"insert","lines":["",""],"id":38},{"start":{"row":77,"column":0},"end":{"row":77,"column":8},"action":"insert","lines":["        "]},{"start":{"row":77,"column":8},"end":{"row":77,"column":9},"action":"insert","lines":["-"]}],[{"start":{"row":77,"column":8},"end":{"row":77,"column":9},"action":"remove","lines":["-"],"id":39},{"start":{"row":77,"column":4},"end":{"row":77,"column":8},"action":"remove","lines":["    "]},{"start":{"row":77,"column":0},"end":{"row":77,"column":4},"action":"remove","lines":["    "]},{"start":{"row":76,"column":9},"end":{"row":77,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":76,"column":9},"end":{"row":77,"column":0},"action":"insert","lines":["",""],"id":40},{"start":{"row":77,"column":0},"end":{"row":77,"column":8},"action":"insert","lines":["        "]},{"start":{"row":77,"column":8},"end":{"row":77,"column":9},"action":"insert","lines":["-"]},{"start":{"row":77,"column":9},"end":{"row":77,"column":10},"action":"insert","lines":["2"]}],[{"start":{"row":77,"column":9},"end":{"row":77,"column":10},"action":"remove","lines":["2"],"id":41},{"start":{"row":77,"column":8},"end":{"row":77,"column":9},"action":"remove","lines":["-"]},{"start":{"row":77,"column":4},"end":{"row":77,"column":8},"action":"remove","lines":["    "]},{"start":{"row":77,"column":0},"end":{"row":77,"column":4},"action":"remove","lines":["    "]},{"start":{"row":76,"column":9},"end":{"row":77,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":76,"column":9},"end":{"row":76,"column":10},"action":"insert","lines":["="],"id":42},{"start":{"row":76,"column":10},"end":{"row":76,"column":11},"action":"insert","lines":["2"]},{"start":{"row":76,"column":11},"end":{"row":76,"column":12},"action":"insert","lines":["0"]}],[{"start":{"row":76,"column":12},"end":{"row":76,"column":13},"action":"insert","lines":[":"],"id":43}],[{"start":{"row":76,"column":12},"end":{"row":76,"column":13},"action":"remove","lines":[":"],"id":44}],[{"start":{"row":76,"column":12},"end":{"row":76,"column":13},"action":"insert","lines":[";"],"id":45}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":0,"column":0},"end":{"row":85,"column":18},"isBackwards":true},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1693926525732,"hash":"a49a038741a699ca6d82cf8fc33080d5c87c4124"}