{"filter":false,"title":"lex.py","tooltip":"/mydiycc/my018/lex.py","undoManager":{"mark":12,"position":12,"stack":[[{"start":{"row":0,"column":0},"end":{"row":89,"column":18},"action":"insert","lines":["import ply.lex as lex","","#トークンの定義","tokens = ( ","    'NUMBER',   #数値","    'RETURN',   #return","    'SEMI',     #セミコロン","    'OPTASU',   #+","    'OPHIKU',   #-","    'OPKAKE',   #*","    #'OPWARU',  #\\","    'SYMBOL',   #文字","    'LBRACE',   #{","    'RBRACE',   #}","    'KAKKO',    #(","    'KOKKA',    #)","    'EQUALS',   #代入=","    ","    'TYPE',      #型","    ",")","","## トークンのパターン","## tokens にある 'NUMBER' の prefix に t_ を付けたものを定義する","## r'\\d+' は r'' はraw文字列を意味する。 \\d+ は 正規表現で \\d(数字) の +(1個以上の繰り返し)","t_NUMBER = r'\\d+'","","#t_RETURN = 'return'","","t_SEMI = ';'","","t_OPTASU = r'\\+'","","t_OPHIKU = r'\\-'","","t_OPKAKE = r'\\*'","","#t_OPWARU = r'\\/'","","t_LBRACE = r'\\{'","","t_RBRACE = r'\\}'","","t_KAKKO = r'\\('","","t_KOKKA = r'\\)'","","t_EQUALS = r'='","","def t_SYMBOL(t):","    r'[a-zA-Z_][0-9a-zA-Z_]*'","    if t.value == 'return':","        t.type = 'RETURN'","    if t.value == 'int':","        t.type = 'TYPE'","    return t","","","#タブ区切りと空白を無視","t_ignore = ' \\t'","","","#エラー時に表示","def t_error(t):","    print(\"Error '%s'\" % t.value[0])","    t.lexer.skip(1)","","#改行時の約束","def t_newline(t):","    r'\\n+'","    t.lexer.lineno += len(t.value)","    ","lexer = lex.lex(debug=0)","","if __name__ == '__main__':","    data = '''","    int main(){","        int x;","        int y;","        x=10;","        y=20;","        return 3+2*3;","    }","    '''","    lexer.input(data)","    while True:","        tok = lexer.token()","        if not tok:","            break","        print(tok)"],"id":1}],[{"start":{"row":10,"column":4},"end":{"row":10,"column":5},"action":"remove","lines":["#"],"id":2}],[{"start":{"row":37,"column":0},"end":{"row":37,"column":1},"action":"remove","lines":["#"],"id":3}],[{"start":{"row":37,"column":14},"end":{"row":37,"column":15},"action":"remove","lines":["/"],"id":4}],[{"start":{"row":37,"column":13},"end":{"row":37,"column":14},"action":"insert","lines":["/"],"id":5}],[{"start":{"row":37,"column":13},"end":{"row":37,"column":14},"action":"remove","lines":["/"],"id":6}],[{"start":{"row":37,"column":14},"end":{"row":37,"column":15},"action":"insert","lines":["/"],"id":7}],[{"start":{"row":81,"column":18},"end":{"row":81,"column":19},"action":"remove","lines":["*"],"id":8},{"start":{"row":81,"column":17},"end":{"row":81,"column":18},"action":"remove","lines":["2"]},{"start":{"row":81,"column":16},"end":{"row":81,"column":17},"action":"remove","lines":["+"]}],[{"start":{"row":81,"column":16},"end":{"row":81,"column":17},"action":"insert","lines":["/"],"id":9}],[{"start":{"row":81,"column":17},"end":{"row":81,"column":18},"action":"remove","lines":["3"],"id":10},{"start":{"row":81,"column":16},"end":{"row":81,"column":17},"action":"remove","lines":["/"]},{"start":{"row":81,"column":15},"end":{"row":81,"column":16},"action":"remove","lines":["3"]}],[{"start":{"row":81,"column":15},"end":{"row":81,"column":16},"action":"insert","lines":["y"],"id":11},{"start":{"row":81,"column":16},"end":{"row":81,"column":17},"action":"insert","lines":["/"]},{"start":{"row":81,"column":17},"end":{"row":81,"column":18},"action":"insert","lines":["y"]}],[{"start":{"row":81,"column":17},"end":{"row":81,"column":18},"action":"remove","lines":["y"],"id":12}],[{"start":{"row":81,"column":17},"end":{"row":81,"column":18},"action":"insert","lines":["x"],"id":13}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":0,"column":0},"end":{"row":89,"column":18},"isBackwards":true},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":67,"state":"start","mode":"ace/mode/python"}},"timestamp":1693966107751,"hash":"fd201665ea659094a036f958c9b6fa7d9776cfda"}