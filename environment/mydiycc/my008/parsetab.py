
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftOPTASUOPHIKUleftOPKAKEKAKKO KOKKA LBRACE NUMBER OPHIKU OPKAKE OPTASU RBRACE RETURN SEMI SYMBOL\n    teigi : kansuuteigi\n    \n    kansuuteigi : SYMBOL SYMBOL KAKKO KOKKA LBRACE bunlist RBRACE\n    \n    bunlist : RETURN expression SEMI\n    \n    expression : NUMBER\n               | expression OPTASU expression\n               | expression OPHIKU expression\n               | expression OPKAKE expression\n    '
    
_lr_action_items = {'SYMBOL':([0,3,],[3,4,]),'$end':([1,2,10,],[0,-1,-2,]),'KAKKO':([4,],[5,]),'KOKKA':([5,],[6,]),'LBRACE':([6,],[7,]),'RETURN':([7,],[9,]),'RBRACE':([8,13,],[10,-3,]),'NUMBER':([9,14,15,16,],[12,12,12,12,]),'SEMI':([11,12,17,18,19,],[13,-4,-5,-6,-7,]),'OPTASU':([11,12,17,18,19,],[14,-4,-5,-6,-7,]),'OPHIKU':([11,12,17,18,19,],[15,-4,-5,-6,-7,]),'OPKAKE':([11,12,17,18,19,],[16,-4,16,16,-7,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'teigi':([0,],[1,]),'kansuuteigi':([0,],[2,]),'bunlist':([7,],[8,]),'expression':([9,14,15,16,],[11,17,18,19,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> teigi","S'",1,None,None,None),
  ('teigi -> kansuuteigi','teigi',1,'p_top','compile.py',15),
  ('kansuuteigi -> SYMBOL SYMBOL KAKKO KOKKA LBRACE bunlist RBRACE','kansuuteigi',7,'p_kansuuteigi','compile.py',22),
  ('bunlist -> RETURN expression SEMI','bunlist',3,'p_bunlist','compile.py',28),
  ('expression -> NUMBER','expression',1,'p_expression','compile.py',34),
  ('expression -> expression OPTASU expression','expression',3,'p_expression','compile.py',35),
  ('expression -> expression OPHIKU expression','expression',3,'p_expression','compile.py',36),
  ('expression -> expression OPKAKE expression','expression',3,'p_expression','compile.py',37),
]
