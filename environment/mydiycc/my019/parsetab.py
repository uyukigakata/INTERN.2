
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftOPTASUOPHIKUleftOPKAKEOPWARUEQUALS KAKKO KOKKA LBRACE NUMBER OPHIKU OPKAKE OPTASU OPWARU RBRACE RETURN SEMI SYMBOL TYPE\n    teigi : kansuuteigi\n          | teigi kansuuteigi\n    \n    kansuuteigi : TYPE SYMBOL KAKKO KOKKA LBRACE bunlist RBRACE\n    \n    bunlist : bun\n            | bunlist bun\n    \n    bun : RETURN expression SEMI\n    \n    bun : TYPE SYMBOL SEMI\n    \n    bun : SYMBOL EQUALS expression SEMI\n    \n    expression : NUMBER\n               | expression OPTASU expression\n               | expression OPHIKU expression\n               | expression OPKAKE expression\n               | expression OPWARU expression\n    \n    expression : SYMBOL\n    '
    
_lr_action_items = {'TYPE':([0,1,2,4,8,11,12,16,17,21,23,28,],[3,3,-1,-2,9,9,-4,-3,-5,-7,-6,-8,]),'$end':([1,2,4,16,],[0,-1,-2,-3,]),'SYMBOL':([3,8,9,11,12,13,15,17,21,23,24,25,26,27,28,],[5,10,14,10,-4,20,20,-5,-7,-6,20,20,20,20,-8,]),'KAKKO':([5,],[6,]),'KOKKA':([6,],[7,]),'LBRACE':([7,],[8,]),'RETURN':([8,11,12,17,21,23,28,],[13,13,-4,-5,-7,-6,-8,]),'EQUALS':([10,],[15,]),'RBRACE':([11,12,17,21,23,28,],[16,-4,-5,-7,-6,-8,]),'NUMBER':([13,15,24,25,26,27,],[19,19,19,19,19,19,]),'SEMI':([14,18,19,20,22,29,30,31,32,],[21,23,-9,-14,28,-10,-11,-12,-13,]),'OPTASU':([18,19,20,22,29,30,31,32,],[24,-9,-14,24,-10,-11,-12,-13,]),'OPHIKU':([18,19,20,22,29,30,31,32,],[25,-9,-14,25,-10,-11,-12,-13,]),'OPKAKE':([18,19,20,22,29,30,31,32,],[26,-9,-14,26,26,26,-12,-13,]),'OPWARU':([18,19,20,22,29,30,31,32,],[27,-9,-14,27,27,27,-12,-13,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'teigi':([0,],[1,]),'kansuuteigi':([0,1,],[2,4,]),'bunlist':([8,],[11,]),'bun':([8,11,],[12,17,]),'expression':([13,15,24,25,26,27,],[18,22,29,30,31,32,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> teigi","S'",1,None,None,None),
  ('teigi -> kansuuteigi','teigi',1,'p_top','compile.py',19),
  ('teigi -> teigi kansuuteigi','teigi',2,'p_top','compile.py',20),
  ('kansuuteigi -> TYPE SYMBOL KAKKO KOKKA LBRACE bunlist RBRACE','kansuuteigi',7,'p_kansuuteigi','compile.py',31),
  ('bunlist -> bun','bunlist',1,'p_bunlist','compile.py',38),
  ('bunlist -> bunlist bun','bunlist',2,'p_bunlist','compile.py',39),
  ('bun -> RETURN expression SEMI','bun',3,'p_bun_return','compile.py',50),
  ('bun -> TYPE SYMBOL SEMI','bun',3,'p_bun_sengen','compile.py',57),
  ('bun -> SYMBOL EQUALS expression SEMI','bun',4,'p_bun_dainyu','compile.py',64),
  ('expression -> NUMBER','expression',1,'p_expression','compile.py',70),
  ('expression -> expression OPTASU expression','expression',3,'p_expression','compile.py',71),
  ('expression -> expression OPHIKU expression','expression',3,'p_expression','compile.py',72),
  ('expression -> expression OPKAKE expression','expression',3,'p_expression','compile.py',73),
  ('expression -> expression OPWARU expression','expression',3,'p_expression','compile.py',74),
  ('expression -> SYMBOL','expression',1,'p_expression_var','compile.py',85),
]
