
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftOPTASUOPHIKUleftOPKAKEEQUALS KAKKO KOKKA LBRACE NUMBER OPHIKU OPKAKE OPTASU RBRACE RETURN SEMI SYMBOL TYPE\n    teigi : kansuuteigi\n          | teigi kansuuteigi\n    \n    kansuuteigi : TYPE SYMBOL KAKKO KOKKA LBRACE bunlist RBRACE\n    \n    bunlist : bun\n            | bunlist bun\n    \n    bun : RETURN expression SEMI\n    \n    bun : TYPE SYMBOL SEMI\n    \n    bun : SYMBOL EQUALS expression SEMI\n    \n    bun : expression SEMI\n    \n    expression : NUMBER\n               | expression OPTASU expression\n               | expression OPHIKU expression\n               | expression OPKAKE expression\n    \n    expression : SYMBOL\n    \n    expression : SYMBOL KAKKO KOKKA\n    '
    
_lr_action_items = {'TYPE':([0,1,2,4,8,11,12,19,20,23,27,30,34,],[3,3,-1,-2,9,9,-4,-3,-5,-9,-7,-6,-8,]),'$end':([1,2,4,19,],[0,-1,-2,-3,]),'SYMBOL':([3,8,9,11,12,13,17,20,23,24,25,26,27,30,34,],[5,10,16,10,-4,22,22,-5,-9,22,22,22,-7,-6,-8,]),'KAKKO':([5,10,22,],[6,18,18,]),'KOKKA':([6,18,],[7,29,]),'LBRACE':([7,],[8,]),'RETURN':([8,11,12,20,23,27,30,34,],[13,13,-4,-5,-9,-7,-6,-8,]),'NUMBER':([8,11,12,13,17,20,23,24,25,26,27,30,34,],[15,15,-4,15,15,-5,-9,15,15,15,-7,-6,-8,]),'EQUALS':([10,],[17,]),'SEMI':([10,14,15,16,21,22,28,29,31,32,33,],[-14,23,-10,27,30,-14,34,-15,-11,-12,-13,]),'OPTASU':([10,14,15,21,22,28,29,31,32,33,],[-14,24,-10,24,-14,24,-15,-11,-12,-13,]),'OPHIKU':([10,14,15,21,22,28,29,31,32,33,],[-14,25,-10,25,-14,25,-15,-11,-12,-13,]),'OPKAKE':([10,14,15,21,22,28,29,31,32,33,],[-14,26,-10,26,-14,26,-15,26,26,-13,]),'RBRACE':([11,12,20,23,27,30,34,],[19,-4,-5,-9,-7,-6,-8,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'teigi':([0,],[1,]),'kansuuteigi':([0,1,],[2,4,]),'bunlist':([8,],[11,]),'bun':([8,11,],[12,20,]),'expression':([8,11,13,17,24,25,26,],[14,14,21,28,31,32,33,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> teigi","S'",1,None,None,None),
  ('teigi -> kansuuteigi','teigi',1,'p_top','compile.py',19),
  ('teigi -> teigi kansuuteigi','teigi',2,'p_top','compile.py',20),
  ('kansuuteigi -> TYPE SYMBOL KAKKO KOKKA LBRACE bunlist RBRACE','kansuuteigi',7,'p_kansuuteigi','compile.py',33),
  ('bunlist -> bun','bunlist',1,'p_bunlist','compile.py',40),
  ('bunlist -> bunlist bun','bunlist',2,'p_bunlist','compile.py',41),
  ('bun -> RETURN expression SEMI','bun',3,'p_bun_return','compile.py',52),
  ('bun -> TYPE SYMBOL SEMI','bun',3,'p_bun_sengen','compile.py',59),
  ('bun -> SYMBOL EQUALS expression SEMI','bun',4,'p_bun_dainyu','compile.py',66),
  ('bun -> expression SEMI','bun',2,'p_bun_expression_only','compile.py',72),
  ('expression -> NUMBER','expression',1,'p_expression','compile.py',85),
  ('expression -> expression OPTASU expression','expression',3,'p_expression','compile.py',86),
  ('expression -> expression OPHIKU expression','expression',3,'p_expression','compile.py',87),
  ('expression -> expression OPKAKE expression','expression',3,'p_expression','compile.py',88),
  ('expression -> SYMBOL','expression',1,'p_expression_var','compile.py',99),
  ('expression -> SYMBOL KAKKO KOKKA','expression',3,'p_expression_funccall','compile.py',105),
]
